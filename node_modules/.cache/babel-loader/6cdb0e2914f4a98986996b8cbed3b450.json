{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\bence\\\\Documents\\\\Github Repos\\\\portfolioSourceCode\\\\src\\\\Components\\\\InfoComp.js\";\nimport React from 'react';\nimport styled from 'styled-components';\n\nconst InfoComp = props => {\n  const Style = styled.div`\n        position: relative;\n        &:hover .Bg{\n            transition: 1s;\n            filter: brightness(20%);\n        }\n    \n    `;\n  const StyledContent = styled.div`\n        background-size: 100% 100%;\n        background-position: center;\n        background-repeat: no-repeat;\n        background-image: url(${props.url});\n    \n    `;\n  const StyledContent2 = styled.div`\n        &:hover a{\n            color: white;\n            transition: 1s;\n        };\n        &:hover p{\n            color: white;\n            transition: 1s;\n        };\n    `;\n  let toRet = null;\n\n  if (props.href === undefined) {\n    toRet = /*#__PURE__*/_jsxDEV(Style, {\n      className: \"Header\",\n      children: [/*#__PURE__*/_jsxDEV(StyledContent, {\n        className: \"Bg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(StyledContent2, {\n        className: \"ContentWrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"TextContent\",\n          children: props.info\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this);\n  } else {\n    toRet = /*#__PURE__*/_jsxDEV(Style, {\n      className: \"Header\",\n      children: [/*#__PURE__*/_jsxDEV(StyledContent, {\n        className: \"Bg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(StyledContent2, {\n        className: \"ContentWrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: props.href,\n          className: \"TextContent\",\n          children: props.info\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this);\n  }\n\n  return toRet;\n};\n\n_c = InfoComp;\nexport default InfoComp;\n\nvar _c;\n\n$RefreshReg$(_c, \"InfoComp\");","map":{"version":3,"sources":["C:/Users/bence/Documents/Github Repos/portfolioSourceCode/src/Components/InfoComp.js"],"names":["React","styled","InfoComp","props","Style","div","StyledContent","url","StyledContent2","toRet","href","undefined","info"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AACA,MAAMC,QAAQ,GAAGC,KAAK,IAAI;AAEtB,QAAMC,KAAK,GAAGH,MAAM,CAACI,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,KAPI;AAQA,QAAMC,aAAa,GAAGL,MAAM,CAACI,GAAI;AACrC;AACA;AACA;AACA,gCAAgCF,KAAK,CAACI,GAAI;AAC1C;AACA,KANI;AAQA,QAAMC,cAAc,GAAGP,MAAM,CAACI,GAAI;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KATI;AAUA,MAAII,KAAK,GAAG,IAAZ;;AAEA,MAAGN,KAAK,CAACO,IAAN,KAAeC,SAAlB,EAA4B;AACxBF,IAAAA,KAAK,gBACD,QAAC,KAAD;AAAO,MAAA,SAAS,EAAG,QAAnB;AAAA,8BACI,QAAC,aAAD;AAAe,QAAA,SAAS,EAAG;AAA3B;AAAA;AAAA;AAAA;AAAA,cADJ,eAEQ,QAAC,cAAD;AAAgB,QAAA,SAAS,EAAG,gBAA5B;AAAA,+BACI;AAAG,UAAA,SAAS,EAAG,aAAf;AAAA,oBACKN,KAAK,CAACS;AADX;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAFR;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAWH,GAZD,MAaK;AACDH,IAAAA,KAAK,gBACD,QAAC,KAAD;AAAO,MAAA,SAAS,EAAG,QAAnB;AAAA,8BACI,QAAC,aAAD;AAAe,QAAA,SAAS,EAAG;AAA3B;AAAA;AAAA;AAAA;AAAA,cADJ,eAEQ,QAAC,cAAD;AAAgB,QAAA,SAAS,EAAG,gBAA5B;AAAA,+BACI;AAAG,UAAA,IAAI,EAAIN,KAAK,CAACO,IAAjB;AAAuB,UAAA,SAAS,EAAG,aAAnC;AAAA,oBACKP,KAAK,CAACS;AADX;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAFR;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAWH;;AAGD,SAAQH,KAAR;AACH,CA3DD;;KAAMP,Q;AA4DN,eAAeA,QAAf","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components'\r\nconst InfoComp = props => {\r\n    \r\n    const Style = styled.div`\r\n        position: relative;\r\n        &:hover .Bg{\r\n            transition: 1s;\r\n            filter: brightness(20%);\r\n        }\r\n    \r\n    `\r\n    const StyledContent = styled.div`\r\n        background-size: 100% 100%;\r\n        background-position: center;\r\n        background-repeat: no-repeat;\r\n        background-image: url(${props.url});\r\n    \r\n    ` \r\n\r\n    const StyledContent2 = styled.div`\r\n        &:hover a{\r\n            color: white;\r\n            transition: 1s;\r\n        };\r\n        &:hover p{\r\n            color: white;\r\n            transition: 1s;\r\n        };\r\n    `\r\n    let toRet = null;\r\n\r\n    if(props.href === undefined){\r\n        toRet = (\r\n            <Style className = \"Header\">\r\n                <StyledContent className = \"Bg\"></StyledContent>\r\n                    <StyledContent2 className = \"ContentWrapper\">\r\n                        <p className = \"TextContent\">\r\n                            {props.info}\r\n                        </p>\r\n                    </StyledContent2>\r\n             </Style>\r\n            \r\n        );\r\n    }\r\n    else {\r\n        toRet = (\r\n            <Style className = \"Header\">\r\n                <StyledContent className = \"Bg\"></StyledContent>\r\n                    <StyledContent2 className = \"ContentWrapper\">\r\n                        <a href = {props.href} className = \"TextContent\">\r\n                            {props.info}\r\n                        </a>\r\n                    </StyledContent2>\r\n             </Style>\r\n            \r\n        );\r\n    }\r\n\r\n\r\n    return  toRet\r\n}\r\nexport default InfoComp;"]},"metadata":{},"sourceType":"module"}